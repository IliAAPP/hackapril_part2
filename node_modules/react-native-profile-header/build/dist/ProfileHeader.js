"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const react_native_1 = require("react-native");
const react_native_bounceable_1 = tslib_1.__importDefault(require("@freakycoder/react-native-bounceable"));
/**
 * ? Local Imports
 */
const ProfileHeader_style_1 = tslib_1.__importStar(require("./ProfileHeader.style"));
const defaultProfilePicture = {
    uri: "https://images.unsplash.com/photo-1484399172022-72a90b12e3c1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2100&q=80",
};
const searchIcon = require("./local-assets/search.png");
const bagIcon = require("./local-assets/shopping-bag.png");
const notificationIcon = require("./local-assets/notification.png");
class ProfileHeader extends React.PureComponent {
    constructor() {
        super(...arguments);
        this.renderLeftAlignedComponent = () => {
            const { titleText, leftButtonComponent, disableLeftAlignedButton = false, leftAlignedButtonImageSource = require("./local-assets/left-arrow.png"), ImageComponent = react_native_1.Image, onLeftButtonPress, } = this.props;
            return (<react_native_1.View style={ProfileHeader_style_1.default.leftAlignedContainer}>
        {!disableLeftAlignedButton && (<react_native_bounceable_1.default bounceEffect={0.8} bounceFriction={2} onPress={onLeftButtonPress}>
            {leftButtonComponent || (<ImageComponent source={leftAlignedButtonImageSource} style={ProfileHeader_style_1.default.leftAlignedButtonImageStyle}/>)}
          </react_native_bounceable_1.default>)}
        <react_native_1.View style={ProfileHeader_style_1.default.titleContainer}>
          <react_native_1.Text style={ProfileHeader_style_1.default.titleTextStyle}>{titleText}</react_native_1.Text>
        </react_native_1.View>
      </react_native_1.View>);
        };
        this.renderFirstIcon = () => {
            const { disableFirstIcon = false, onFirstIconPress, ImageComponent = react_native_1.Image, firstIconImageSource = searchIcon, } = this.props;
            return (!disableFirstIcon && (<react_native_1.View style={ProfileHeader_style_1.default.iconButtonContainer}>
          <react_native_bounceable_1.default bounceEffect={0.8} bounceFriction={2} onPress={onFirstIconPress}>
            <ImageComponent resizeMode="contain" source={firstIconImageSource} style={ProfileHeader_style_1.default.iconImageStyle}/>
          </react_native_bounceable_1.default>
        </react_native_1.View>));
        };
        this.renderSecondIcon = () => {
            const { onSecondIconPress, ImageComponent = react_native_1.Image, disableSecondIcon = false, secondIconImageSource = bagIcon, } = this.props;
            return (!disableSecondIcon && (<react_native_1.View style={ProfileHeader_style_1.default.iconButtonContainer}>
          <react_native_bounceable_1.default bounceEffect={0.8} bounceFriction={2} onPress={onSecondIconPress}>
            <ImageComponent resizeMode="contain" source={secondIconImageSource} style={ProfileHeader_style_1.default.iconImageStyle}/>
          </react_native_bounceable_1.default>
        </react_native_1.View>));
        };
        this.renderThirdIcon = () => {
            const { onThirdIconPress, ImageComponent = react_native_1.Image, disableThirdIcon = false, thirdIconImageSource = notificationIcon, } = this.props;
            return (!disableThirdIcon && (<react_native_1.View style={ProfileHeader_style_1.default.iconButtonContainer}>
          <react_native_bounceable_1.default bounceEffect={0.8} bounceFriction={2} onPress={onThirdIconPress}>
            <ImageComponent resizeMode="contain" source={thirdIconImageSource} style={ProfileHeader_style_1.default.iconImageStyle}/>
          </react_native_bounceable_1.default>
        </react_native_1.View>));
        };
        this.renderProfilePicture = () => {
            const { onProfilePicPress, ImageComponent = react_native_1.Image, profileImageSource = defaultProfilePicture, } = this.props;
            return (<react_native_bounceable_1.default onPress={onProfilePicPress}>
        <ImageComponent source={profileImageSource} style={ProfileHeader_style_1.default.profileImageStyle}/>
      </react_native_bounceable_1.default>);
        };
        this.renderRightAlignedComponent = () => {
            return (<react_native_1.View style={ProfileHeader_style_1.default.rightAlignedContainer}>
        {this.renderFirstIcon()}
        {this.renderSecondIcon()}
        {this.renderThirdIcon()}
        {this.renderProfilePicture()}
      </react_native_1.View>);
        };
    }
    render() {
        const { style, height = 50, backgroundColor = "#fff" } = this.props;
        return (<react_native_1.View style={[ProfileHeader_style_1._container(height, backgroundColor), style]}>
        {this.renderLeftAlignedComponent()}
        {this.renderRightAlignedComponent()}
      </react_native_1.View>);
    }
}
exports.default = ProfileHeader;
//# sourceMappingURL=ProfileHeader.js.map